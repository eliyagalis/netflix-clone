version: '3'
services:
  redis:
    image: redis:7.0
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app_network
 
    kafka:
      image: bitnami/kafka:latest
      ports:
       - "9092:9092"
      environment:
        KAFKA_CFG_NODE_ID=1
        KAFKA_CFG_PROCESS_ROLES=broker,controller
        KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
        KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
        KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
        KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
        KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
        KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
        ALLOW_PLAINTEXT_LISTENER=yes
      volumes:
        - kafka_data:/bitnami/kafka
      driver: local

    client:
      build:
        context: ../client/
      container_name: client
      ports:
        - "5174:80"  # חיצוני: פנימי (nginx מאזין על 80)
      networks:
        - app_network
      depends_on:
        - proxy  
      restart: always
  proxy:
    build:
      context: ../api-gateway/
    container_name: proxy
    ports:
      - "3000:3000"
    env_file:
      - ../api-gateway/.env
    depends_on:
      - payment_service
      - user_service
      - redis
      - movie_service
    networks:
      - app_network
    restart: always

  movie_service:
    build:
      context: ../movie-service/
    container_name: movie_service
    ports:
      - "3001:3001"
    env_file:
      - ../movie-service/.env
    depends_on:
      - redis
    networks:
      - app_network
    restart: always

  payment_service:
    build:
      context: ../payment-service/
    container_name: payment_service
    ports:
      - "3003:3003"
    env_file:
      - ../payment-service/.env
    depends_on:
      - redis
    networks:
      - app_network
    restart: always

  user_service:
    build:
      context: ../user-service/
    container_name: user_service
    ports:
      - "3002:3002"
    env_file:
      - ../user-service/.env
    depends_on:
      - redis
    networks:
      - app_network
    restart: always

volumes:
  kafka_data:
networks:
  app_network:
    driver: bridge
