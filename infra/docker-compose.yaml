services:
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    command: ["redis-server","--appendonly","yes"]
    networks:
      - app_network

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      ALLOW_PLAINTEXT_LISTENER: yes
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - app_network

  client:
    build:
      context: ../client/
      dockerfile: Dockerfile.dev
    container_name: client_dev
    ports:
      - "5174:5174"
    volumes:
      - ../client:/app
      - /app/node_modules
    command: npm run dev
    depends_on:
      - proxy
    networks:
      - app_network
      
  movie_service:
    build:
      context: ../movie-service/
    container_name: movie-service
    ports:
      - "3001:3001"
    env_file:
      - ../movie-service/.env
    depends_on:
      - redis
    networks:
      - app_network
    restart: always

  payment_service:
    build:
      context: ../payment-service/
    container_name: payment-service
    ports:
      - "3003:3003"
    env_file:
      - ../payment-service/.env
    depends_on:
      - redis
      - kafka
    volumes:
      - ../payment-service/certs:/app/payment-service/certs
    networks:
      - app_network
    restart: always

  user_service:
    build:
      context: ../user-service/
    container_name: user-service
    ports:
      - "3002:3002"
    env_file:
      - ../user-service/.env
    depends_on:
      - kafka
    networks:
      - app_network
    restart: always
  proxy:
    build:
      context: ../api-gateway/
    container_name: proxy
    ports:
      - "3000:3000"
    # environment:
    # - USERS_SERVICE_URL=http://users-service:3002
    # - PAYMENTS_SERVICE_URL=https://payments-service:3003
    # - MOVIES_SERVICE_URL=http://movies-service:3001
    # - STREAMING_SERVICE_URL=http://streaming-service:3004
    env_file:
      - ../api-gateway/.env
    depends_on:
      - payment_service
      - user_service
      - movie_service
    networks:
      - app_network
    restart: always

volumes:
  kafka_data:

networks:
  app_network:
    driver: bridge